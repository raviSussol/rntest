name: Android build

on:
  workflow_call:
    secrets:
      ANDROID_SIGNING_KEY:
        required: true
      ANDROID_KEY_ALIAS:
        required: true
      ANDROID_KEY_STORE_PASSWORD:
        required: true
      ANDROID_KEY_PASSWORD:
        required: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # - uses: actions/setup-node@v3
      #   with:
      #     node-version: '18'
      # - run: yarn install --frozen-lockfile

      # - name: Setup JDK 11
      #   uses: actions/setup-java@v3
      #   with:
      #     java-version: '11'
      #     distribution: 'temurin'
      #     cache: gradle

      # - name: Validate Gradle Wrapper
      #   uses: gradle/wrapper-validation-action@v1

      # - name: Grant execute permission for gradlew
      #   run: |
      #     cd ./android
      #     chmod +x gradlew

      # - name: Build gradle project
      #   run: |
      #     cd ./android
      #     ./gradlew build

      # - name: Run tests build
      #   run: |
      #     cd ./android
      #     ./gradlew test

      # - if: startsWith(github.ref, 'refs/tags/')
      #   name: Build APK
      #   run: |
      #     cd ./android
      #     ./gradlew assembleRelease

      # - if: startsWith(github.ref, 'refs/tags/')
      #   name: Delete old artifacts
      #   uses: actions/github-script@v6
      #   id: artifact
      #   with:
      #     script: |
      #       const res = await github.rest.actions.listArtifactsForRepo({
      #         owner: context.repo.owner,
      #         repo: context.repo.repo,
      #       });
      #       res.data.artifacts
      #         .forEach(({ id }) => {
      #           github.rest.actions.deleteArtifact({
      #             owner: context.repo.owner,
      #             repo: context.repo.repo,
      #             artifact_id: id,
      #         })
      #       });

      # - if: startsWith(github.ref, 'refs/tags/')
      #   name: Upload artifacts
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: Mobile
      #     path: android/app/build/outputs/apk/release/app-release.apk
      #     retention-days: 1

  release:
    if: startsWith(github.ref, 'refs/tags/')
    name: package
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - uses: actions/checkout@v3
      # - uses: actions/download-artifact@v3
      #   with:
      #     name: Mobile
      # - run: mkdir release && cp ./app-release.apk release

      # - name: Sign app APK
      #   uses: r0adkll/sign-android-release@v1
      #   id: sign_app
      #   with:
      #     releaseDirectory: release
      #     signingKeyBase64: ${{ secrets.ANDROID_SIGNING_KEY }}
      #     alias: ${{ secrets.ANDROID_KEY_ALIAS }}
      #     keyStorePassword: ${{ secrets.ANDROID_KEY_STORE_PASSWORD }}
      #     keyPassword: ${{ secrets.ANDROID_KEY_PASSWORD }}
      #   env:
      #     BUILD_TOOLS_VERSION: '33.0.0'

      # - name: Generate changelog
      #   uses: mikepenz/release-changelog-builder-action@v3
      #   id: build_changelog
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # - name: Create release and upload assets from artifact
      #   uses: softprops/action-gh-release@v1
      #   with:
      #     tag_name: ${{ github.ref }}
      #     name: ${{ github.ref_name }}
      #     draft: contains(github.ref, 'draft') && true || false
      #     # prerelease: contains(github.ref, 'prerelease') && true || false
      #     prerelease: true
      #     body: ${{ steps.build_changelog.outputs.changelog }}
      #     files: ${{steps.sign_app.outputs.signedReleaseFile}}

      # for testing
      - run: echo 'Job context is ${{ toJSON(job) }}'
      - run: echo 'Prerelease is ${{ contains(github.ref, 'prerelease') && true || false }}'

  # publish:
  #   name: publish
  #   runs-on: ubuntu-latest
  #   needs: [release]
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Download signed APK
  #       uses: actions/download-artifact@v3
  #       with:
  #         name: Mobile.apk

  #     - name: Display structure of downloaded files
  #       run: ls -R
